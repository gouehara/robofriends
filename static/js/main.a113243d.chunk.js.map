{"version":3,"sources":["components/Card.js","components/CardList.js","components/Scroll.js","components/SearchBox.js","App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","alt","src","CardList","CardComponent","robots","map","r","Scroll","props","style","overflow","border","height","children","SearchBox","onSearchChange","type","placeholder","onChange","App","e","setState","searchfield","target","value","state","fetch","then","response","json","filteredRobots","this","filter","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,EAZF,SAAC,GAAwB,EAAtBC,GAAuB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACxB,OACE,sBAAKC,UAAU,mDAAf,UACE,qBAAKC,IAAI,SAASC,IAAG,+BAA0BJ,EAA1B,cACrB,gCACE,6BAAKA,IACL,4BAAIC,WCEGI,EAPE,SAAC,GAAgB,IAC1BC,EADyB,EAAbC,OACWC,KAAI,SAACC,GAAD,OAC/B,cAAC,EAAD,CAAMV,GAAIU,EAAEV,GAAIC,KAAMS,EAAET,KAAMC,MAAOQ,EAAER,OAAYQ,EAAEV,OAEvD,OAAO,8BAAMO,KCKAI,EAVA,SAACC,GACd,OACE,qBACEC,MAAO,CAAEC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SADlE,SAGGJ,EAAMK,YCQEC,EAbG,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eACnB,OACE,qBAAKhB,UAAU,MAAf,SACE,uBACEA,UAAU,mCACViB,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCqCHI,G,wDAvCb,aAAe,IAAD,8BACZ,gBAaFJ,eAAiB,SAACK,GAChB,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACXrB,OAAQ,GACRkB,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBI,MAAM,4CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GAAD,OAAU,EAAKR,SAAS,CAAEjB,OAAQyB,S,oBAM5C,WAAU,IAAD,OACDC,EAAiBC,KAAKN,MAAMrB,OAAO4B,QAAO,SAAC1B,GAC/C,OAAOA,EAAET,KACNoC,cACAC,SAAS,EAAKT,MAAMH,YAAYW,kBAErC,OAAiC,IAA7BF,KAAKN,MAAMrB,OAAO+B,OACb,oBAAIpC,UAAU,QAAd,wBAGL,sBAAKA,UAAU,SAAf,UACE,oBAAIA,UAAU,KAAd,0BACA,cAAC,EAAD,CAAWgB,eAAgBgB,KAAKhB,iBAChC,cAAC,EAAD,UACE,cAAC,EAAD,CAAUX,OAAQ0B,a,GAhCZM,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a113243d.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Card = ({ id, name, email }) => {\n  return (\n    <div className=\"bg-light-green dib br3 pa3 ma2 bw2 grow shadow-5\">\n      <img alt=\"robots\" src={`https://robohash.org/${name}?200x200`} />\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"./Card\";\n\nconst CardList = ({ robots }) => {\n  const CardComponent = robots.map((r) => (\n    <Card id={r.id} name={r.name} email={r.email} key={r.id} />\n  ));\n  return <div>{CardComponent}</div>;\n};\n\nexport default CardList;\n","import React from \"react\";\n\nconst Scroll = (props) => {\n  return (\n    <div\n      style={{ overflow: \"scroll\", border: \"solid 1px black\", height: \"600px\" }}\n    >\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;\n","import React from \"react\";\n\nconst SearchBox = ({ onSearchChange }) => {\n  return (\n    <div className=\"pa2\">\n      <input\n        className=\"pa3 ba b--green bg-lightest-blue\"\n        type=\"search\"\n        placeholder=\"search robots\"\n        onChange={onSearchChange}\n      />\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import React, { Component } from \"react\";\nimport CardList from \"./components/CardList\";\nimport Scroll from \"./components/Scroll\";\nimport SearchBox from \"./components/SearchBox\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: [],\n      searchfield: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.cypress.io/users\")\n      .then((response) => response.json())\n      .then((json) => this.setState({ robots: json }));\n  }\n\n  onSearchChange = (e) => {\n    this.setState({ searchfield: e.target.value });\n  };\n  render() {\n    const filteredRobots = this.state.robots.filter((r) => {\n      return r.name\n        .toLowerCase()\n        .includes(this.state.searchfield.toLowerCase());\n    });\n    if (this.state.robots.length === 0) {\n      return <h1 className=\"tc f2\">Loading...</h1>;\n    } else {\n      return (\n        <div className=\"App tc\">\n          <h1 className=\"f1\">RobotFriends</h1>\n          <SearchBox onSearchChange={this.onSearchChange} />\n          <Scroll>\n            <CardList robots={filteredRobots} />\n          </Scroll>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}